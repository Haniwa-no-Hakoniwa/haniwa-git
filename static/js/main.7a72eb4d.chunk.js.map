{"version":3,"sources":["Noteitem.js","App.js","reportWebVitals.js","index.js"],"names":["NoteItem","this","props","title","description","className","Component","App","state","NoteList","JSON","parse","localStorage","getItem","addNote","item","callBack","setState","concat","setItem","stringify","removeNote","filter","x","onSubmit","e","preventDefault","titleElement","target","elements","descriptionElement","value","id","placeholder","type","map","Note","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAqBeA,E,4JAhBb,WAAU,IAAD,EAKHC,KAAKC,MAHPC,EAFK,EAELA,MACAC,EAHK,EAGLA,YACGF,EAJE,uCAOP,OACE,8CAAKG,UAAU,YAAeH,GAA9B,cACE,qBAAKG,UAAU,iBAAf,SAAiCF,IACjC,qBAAKE,UAAU,uBAAf,SAAuCD,Y,GAXxBE,aCqGRC,E,4MAlGbC,MAAQ,CACNC,SAAUC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,I,EAI5DC,QAAU,SAACC,EAAMC,GAEf,EAAKC,SACH,CACER,SAAU,EAAKD,MAAMC,SAASS,OAAOH,KAEvC,WAEEH,aAAaO,QAAQ,WAAYT,KAAKU,UAAU,EAAKZ,MAAMC,WAE3DO,GAAYA,Q,EAMlBK,WAAa,SAACN,EAAMC,GAClB,EAAKC,SACH,CACER,SAAU,EAAKD,MAAMC,SAASa,QAAO,SAAAC,GAAC,OAAIA,IAAMR,OAElD,WAEEH,aAAaO,QAAQ,WAAYT,KAAKU,UAAU,EAAKZ,MAAMC,WAE3DO,GAAYA,Q,4CAKlB,WAAU,IAAD,OACP,OACE,sBAAKX,UAAU,MAAf,UACE,uBACEA,UAAU,WACVmB,SAAU,SAAAC,GAERA,EAAEC,iBAGF,IAAMC,EAAeF,EAAEG,OAAOC,SAAT,MAEfC,EAAqBL,EAAEG,OAAOC,SAAT,YAG3B,EAAKf,QACH,CACIX,MAAOwB,EAAaI,MACpB3B,YAAa0B,EAAmBC,QAGpC,WACEJ,EAAaI,MAAQ,GACrBD,EAAmBC,MAAQ,OApBnC,UAyBE,gCACE,uBACEC,GAAG,QACHC,YAAY,UAEd,0BACED,GAAG,cACHC,YAAY,mBAGhB,8BACE,wBACEC,KAAK,SADP,+BAOJ,8BAECjC,KAAKO,MAAMC,SAAS0B,KAAI,SAAAC,GAAI,OACzB,cAAC,EAAD,CAEEjC,MAAOiC,EAAKjC,MACZC,YAAagC,EAAKhC,YAElBiC,QAAS,kBAAM,EAAKhB,WAAWe,KAJ1BA,EAAKjC,mB,GAxFNG,aCQHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7a72eb4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './noteitem.css';\r\nimport './reset.css';\r\n\r\nclass NoteItem extends Component {\r\n  render() {\r\n    const {\r\n      title,\r\n      description,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"NoteItem\" {...props}>\r\n        <div className=\"NoteItem-title\">{title}</div>\r\n        <div className=\"NoteItem-description\">{description}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteItem;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport NoteItem from \"./Noteitem.js\"\n\nclass App extends Component {\n\n  // NoteListをstateに定義、初期値はlocalStorageから取得または []\n  state = {\n    NoteList: JSON.parse(localStorage.getItem(\"NoteList\")) || []\n  }\n\n  // NoteList itemの追加\n  addNote = (item, callBack) => {\n    // NoteList stateに追加\n    this.setState(\n      {\n        NoteList: this.state.NoteList.concat(item)\n      },\n      () => {\n        // localStorageにNoteList stateを保存\n        localStorage.setItem(\"NoteList\", JSON.stringify(this.state.NoteList))\n        // callBack関数が引数に渡されていた場合に実行\n        callBack && callBack()\n      }\n    )\n  }\n\n  // NoteListからitemを削除\n  removeNote = (item, callBack) => {\n    this.setState(\n      {\n        NoteList: this.state.NoteList.filter(x => x !== item)\n      },\n      () => {\n        // localStorageにNoteList stateを保存\n        localStorage.setItem(\"NoteList\", JSON.stringify(this.state.NoteList))\n        // callBack関数が引数に渡されていた場合に実行\n        callBack && callBack()\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form\n          className=\"App-form\"\n          onSubmit={e => {\n            // formのデフォルトのイベントをキャンセル\n            e.preventDefault();\n\n            // idがtitleのElementを取得\n            const titleElement = e.target.elements[\"title\"]\n            // idがdescriptionのElementを取得\n            const descriptionElement = e.target.elements[\"description\"];\n\n            // Note stateに追加\n            this.addNote(\n              {\n                  title: titleElement.value,\n                  description: descriptionElement.value\n              },\n              // stateの変更後に入力した値を空にする\n              () => {\n                titleElement.value = \"\";\n                descriptionElement.value = \"\";\n              }\n            )\n          }}\n        >\n          <div>\n            <input\n              id=\"title\"\n              placeholder=\"title\"\n            />\n            <textarea\n              id=\"description\"\n              placeholder=\"description\"\n            />\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n            >\n              登録\n            </button>\n          </div>\n        </form>\n        <div>\n        {/* Note配列の要素数分NoteItemコンポーネントを展開 */}\n        {this.state.NoteList.map(Note => (\n            <NoteItem\n              key={Note.title}\n              title={Note.title}\n              description={Note.description}\n              // クリックされたItemをNoteList stateから削除\n              onClick={() => this.removeNote(Note)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}